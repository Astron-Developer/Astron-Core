policy_module(astron, 1.100.1)

########################################
#
# Declarations
#

type astron_t;
type astron_exec_t;
init_daemon_domain(astron_t, astron_exec_t)

permissive astron_t;

type astron_initrc_exec_t;
init_script_file(astron_initrc_exec_t)

type astron_conf_t;
files_type(astron_conf_t)

type astron_var_lib_t;
files_type(astron_var_lib_t)

type astron_var_run_t;
files_type(astron_var_run_t)

type astron_port_t;
corenet_port(astron_port_t)

########################################
#
# astron local policy
#
allow astron_t self:process { fork };

allow astron_t self:fifo_file rw_fifo_file_perms;
allow astron_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(astron_t, astron_conf_t, astron_conf_t)
manage_files_pattern(astron_t, astron_conf_t, astron_conf_t)

manage_dirs_pattern(astron_t, astron_var_lib_t, astron_var_lib_t)
manage_files_pattern(astron_t, astron_var_lib_t, astron_var_lib_t)
files_var_lib_filetrans(astron_t, astron_var_lib_t, { dir file })

manage_dirs_pattern(astron_t, astron_var_run_t, astron_var_run_t)
manage_files_pattern(astron_t, astron_var_run_t, astron_var_run_t)

sysnet_dns_name_resolve(astron_t)
corenet_all_recvfrom_unlabeled(astron_t)

allow astron_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(astron_t)
corenet_tcp_sendrecv_generic_node(astron_t)
corenet_tcp_sendrecv_all_ports(astron_t)
corenet_tcp_bind_generic_node(astron_t)

gen_require(`
    type astron_port_t;
')
allow astron_t astron_port_t:tcp_socket name_bind;

gen_require(`
    type astron_port_t;
')
allow astron_t astron_port_t:tcp_socket name_connect;

domain_use_interactive_fds(astron_t)

files_read_etc_files(astron_t)

miscfiles_read_localization(astron_t)

sysnet_dns_name_resolve(astron_t)

allow astron_t astron_exec_t:file execute_no_trans;
allow astron_t self:process setsched;
corecmd_exec_ls(astron_t)
corenet_tcp_connect_http_port(astron_t)
dev_read_urand(astron_t)
fs_getattr_xattr_fs(astron_t)
kernel_read_system_state(astron_t)
